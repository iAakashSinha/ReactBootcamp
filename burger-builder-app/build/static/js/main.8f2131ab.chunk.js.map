{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Model/Model.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Model/Model.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","INGREDIENT_PRICES","salad","cheese","meat","bacon","totalPrice","purchasing","loading","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","get","then","data","catch","sum","disabledInfo","orderSummary","Spinner","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","entries","param","path","match","render","ingredientName","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","orders","fetchedOrders","err","App","component","Orders","BurgerBuilder","Boolean","window","hostname","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f2131ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Model_Modal__1xK1z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","\n//functional component\nconst aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = ( props ) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link} \n            exact={props.exact}\n            activeClassName={classes.active} >{props.children}\n        </NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = () => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react'\nimport classes from './Toolbar.module.css'\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = ( props ) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;\n","import React from 'react'\nimport classes from './Backdrop.module.css'\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> :null\n\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nexport default Layout;","import React,{Component} from 'react';\nimport classes from './BurgerIngredient.module.css'\nimport PropTypes from 'prop-types'\n\n\nclass BurgerIngredient extends Component {\n\n    render(){\n        let ingredient = null;\n\n        switch(this.props.type){\n            case('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n    \n            case('bread-top'):\n                 ingredient = (\n                     <div className={classes.BreadTop}>\n                         <div className={classes.Seeds1}></div>\n                         <div className={classes.Seeds2}></div>\n                     </div>\n                 );\n                 break;\n            \n            case('meat'):\n                ingredient = <div className={classes.Meat}></div>\n                break;\n    \n            case('cheese'):\n                ingredient = <div className={classes.Cheese}></div>\n                break;\n    \n            case('salad'):\n                ingredient = <div className={classes.Salad}></div>\n                break;\n    \n            case('bacon'):\n                ingredient = <div className={classes.Bacon}></div>\n                break;\n    \n            default:\n                ingredient=null;    \n        }\n        return ingredient;\n    }\n};\n\n\nBurgerIngredient.propTypes={\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react'\nimport classes from './Burger.module.css'\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\n// import { withRouter } from 'react-router-dom';\n\n//the props recieve the ingredients from BurgerBuilder.js\nconst burger = (props) => {\n    console.log(props);\n    //transform the object into array to map.\n    //give us the array of strings of keys\n    let transformedIngredients= Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_,i) => {\n                return <BurgerIngredient key={igKey+i} type={igKey} />\n            });\n        })\n        .reduce((arr,el)=>{\n            return arr.concat(el);\n        },[]);\n        if(transformedIngredients.length===0){\n            transformedIngredients = <p>Please Start Adding ingredients!</p>\n        }\n\n    return(\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\"/>\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    );\n};\n\nexport default burger;\n\n// If you ever need direct access to match history and location \n// and you don't want to manually pass\n// it on from the top level component, you can use withRouter.\n// export default withRouter(burger);\n","import React from 'react'\nimport classes from './BuildControl.module.css'\n\nconst buildControl = (props) => {\n    return(\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n\n        <button\n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>Less\n        </button>\n\n        <button \n            className={classes.More} \n            onClick={props.added}>More\n        </button>\n\n    </div>\n    );\n};\n\nexport default buildControl;\n","import React from 'react';\nimport classes from './BuildControls.module.css'\nimport BuildControl from './BuildControl/BuildControl'\n\nconst controls = [\n    { label: 'Salad', type : 'salad'},\n    { label: 'Bacon', type : 'bacon'},\n    { label: 'Cheese', type : 'cheese'},\n    { label: 'Meat', type : 'meat'}\n];\n\nconst buildControls =(props) => {\n    return (\n        <div className={classes.BuildControls}>\n            <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n            {controls.map(ctrl => (\n                <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]} />\n            ))}\n            <button \n                className={classes.OrderButton}\n                disabled={!props.purchasable}\n                onClick={props.ordered}>ORDER NOW</button>\n        </div>\n    );\n};\n\nexport default buildControls;","import React, { Component } from 'react';\nimport classes from './Model.module.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate ( nextProps, nextState ) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    componentWillUpdate () {\n        console.log('[Modal] WillUpdate');\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default Modal;","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button \n        disabled = {props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>\n        {props.children}\n    </button>\n);\n\nexport default button;","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n    // componentWillUpdate() {\n    //     console.log('[OrderSummary] WillUpdate');\n    // }\n\n    render () {\n        const ingredientSummary = Object.keys( this.props.ingredients )\n            .map( igKey => {\n                return (\n                    <li key={igKey}>\n                        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\n                    </li> );\n            } );\n\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed( 2 )}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Aux>\n        );\n    }\n}\n\nexport default OrderSummary;","import React from 'react'\nimport classes from './Spinner.module.css'\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Model/Model'\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import axios from 'axios'\n\nconst instance = axios.create ({\n    baseURL:'https://react-my-burger-70359.firebaseio.com/'\n});\n\nexport default instance;","import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Model/Model'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        ingredients: null,\n        totalPrice: 4,\n        purchasable: false,\n        purchasing: false,\n        loading: false,\n        error: false\n    }\n\n    componentDidMount () {\n        console.log(this.props);\n        axios.get( 'https://react-my-burger-70359.firebaseio.com/ingredients.json' )\n            .then( response => {\n                this.setState( { ingredients: response.data } );\n            } )\n            .catch( error => {\n                this.setState( { error: true } );\n            } );\n    }\n\n    updatePurchaseState ( ingredients ) {\n        const sum = Object.keys( ingredients )\n            .map( igKey => {\n                return ingredients[igKey];\n            } )\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0 );\n        this.setState( { purchasable: sum > 0 } );\n    }\n\n    addIngredientHandler = ( type ) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\n        this.updatePurchaseState( updatedIngredients );\n    }\n\n    removeIngredientHandler = ( type ) => {\n        const oldCount = this.state.ingredients[type];\n        if ( oldCount <= 0 ) {\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\n        this.updatePurchaseState( updatedIngredients );\n    }\n\n    purchaseHandler = () => {\n        this.setState( { purchasing: true } );\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState( { purchasing: false } );\n    }\n\n//Note:         this.props.history.push()\n// history is one of these special props provided by the router\n// and there we have this push prop which allows us to basically switch the page and push a new page onto that\n// stack of pages.\n\n    purchaseContinueHandler = () => {\n        // Helper method which is provided by javascript, encodeURIComponent,which simply encodes my elements such that they can be used in the URL.\n        const queryParams =[];\n        for(let i in this.state.ingredients){\n            //property_name = value of property_name\n            queryParams.push(encodeURIComponent(i)+ '=' + encodeURIComponent(this.state.ingredients[i]));\n        }\n\n        queryParams.push('price='+this.state.totalPrice);\n        const queryString = queryParams.join('&');\n        this.props.history.push({\n            pathname:'/checkout',\n            search: '?' + queryString\n        });\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for ( let key in disabledInfo ) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if ( this.state.ingredients ) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.state.ingredients} />\n                    <BuildControls\n                        ingredientAdded={this.addIngredientHandler}\n                        ingredientRemoved={this.removeIngredientHandler}\n                        disabled={disabledInfo}\n                        purchasable={this.state.purchasable}\n                        ordered={this.purchaseHandler}\n                        price={this.state.totalPrice} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.state.ingredients}\n                price={this.state.totalPrice}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n        if ( this.state.loading ) {\n            orderSummary = <Spinner />;\n        }\n        // {salad: true, meat: false, ...}\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nexport default withErrorHandler( BurgerBuilder, axios );","import React from 'react';\nimport Burger from '../../Burger/Burger'\nimport Button from '../../UI/Button/Button'\nimport classes from './CheckoutSummary.module.css'\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We Hope it Tastes Well!</h1>\n            <div style={{width:'100%',margin:'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n                <Button btnType=\"Danger\"\n                        clicked={props.checkoutCancelled}>CANCEL\n                </Button>\n\n                <Button btnType=\"Success\"\n                        clicked={props.checkoutContinued}>CONTINUE\n                </Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from 'react'\nimport classes from './Input.module.css'\n\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","import React,{ Component } from \"react\"\nimport Button from '../../../components/UI/Button/Button'\nimport classes from './ContactData.module.css'\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input'\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false,\n        loading: false\n    }\n\n    orderHandler = ( event ) => {\n        event.preventDefault();\n        this.setState( { loading: true } );\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.price,\n            orderData: formData\n        }\n        axios.post( '/orders.json', order )\n            .then( response => {\n                this.setState( { loading: false } );\n                this.props.history.push( '/' );\n            } )\n            .catch( error => {\n                this.setState( { loading: false } );\n            } );\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n        if (!rules) {\n            return true;\n        }\n        \n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        return isValid;\n    }\n\n\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n        const updatedFormElement = { \n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        \n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render () {\n        const formElementsArray = [];\n        for(let key in this.state.orderForm){\n            formElementsArray.push({\n                id:key,\n                config:this.state.orderForm[key]\n            });\n        }\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input  \n                            key={formElement.id}\n                            elementType={formElement.config.elementType}\n                            elementConfig={formElement.config.elementConfig}\n                            value={formElement.config.value}\n                            invalid={!formElement.config.valid}\n                            shouldValidate={formElement.config.validation}\n                            touched={formElement.config.touched}\n                            changed={(event) => this.inputChangedHandler(event,formElement.id)}/>\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if ( this.state.loading ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nexport default ContactData;","import React, { Component } from \"react\";\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route } from 'react-router-dom'\nimport ContactData from './ContactData/ContactData'\n\nclass Checkout extends Component {\n    state = {\n        ingredients: null,\n        price: 0\n    }\n\n    componentWillMount () {\n        const query = new URLSearchParams( this.props.location.search );\n        const ingredients = {};\n        let price = 0;\n        for ( let param of query.entries() ) {\n            // ['salad', '1']\n            if (param[0] === 'price') {\n                price = param[1];\n            } else {\n                ingredients[param[0]] = +param[1];\n            }\n        }\n        this.setState( { ingredients: ingredients, totalPrice: price } );\n    }\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace( '/checkout/contact-data' );\n    }\n\n    render () {\n        return (\n            <div>\n                <CheckoutSummary\n                    ingredients={this.state.ingredients}\n                    checkoutCancelled={this.checkoutCancelledHandler}\n                    checkoutContinued={this.checkoutContinuedHandler} />\n                <Route \n                    path={this.props.match.path + '/contact-data'} \n                    render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props} />)} />\n            </div>\n        );\n    }\n}\n\nexport default Checkout;\n","import React from 'react'\nimport classes from './Order.module.css'\n\nconst order = ( props ) => {\n    const ingredients = [];\n\n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, { Component } from \"react\";\nimport Order from '../../components/Order/Order'\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount() {\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                this.setState({loading: false, orders: fetchedOrders});\n            })\n            .catch(err => {\n                this.setState({loading: false});\n            });\n    }\n\n    render () {\n        return (\n            <div>\n                {this.state.orders.map(order => (\n                    <Order \n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default withErrorHandler(Orders, axios);","import React,{Component} from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from './containers/Checkout/Checkout';\nimport {Route,Switch} from 'react-router-dom';\nimport Orders from './containers/Orders/Orders'\n\nclass App extends Component {\n  render(){\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout}/>\n            <Route path=\"/orders\" component={Orders}/>\n            <Route path=\"/\" exact component={BurgerBuilder}/>\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst app =(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(app,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}